// Q: 16
// Title
// L1 - Async Data Fetching Simulation**
// Problem Statement
// Create a program that simulates API calls using nested callbacks:

// fetchUserData(callback):
// Logs "Fetching user data..."
// After 1s, calls callback with "User data received"
// Inside callback, fetchUserPosts(callback):
// Logs "Fetching user posts..."
// After 1.5s, calls callback with "User posts received"
// Finally log "All data loaded successfully!"
// Expected Output
// "Fetching user data..."
// (1 second delay)
// "User data received"
// "Fetching user posts..."
// (1.5 second delay)
// "User posts received"
// "All data loaded successfully!"


function fetchUserData(callback) {
    console.log("Fetching user data...");
    setTimeout(() => {
        const userData = "User data received";
        callback(userData);
    }, 1000);
}

function fetchUserPosts(callback) {
    console.log("Fetching user posts...");
    setTimeout(() => {
        const userPosts = "User posts received";
        callback(userPosts);
    }, 1500);
}

fetchUserData((userData) => {
    console.log(userData);
    fetchUserPosts((userPosts) => {
        console.log(userPosts);
        console.log("All data loaded successfully!");
    });
});
