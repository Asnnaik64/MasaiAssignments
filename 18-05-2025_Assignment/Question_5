// Q: 15
// L2: Using .reduce() to Create a Frequency Count from a String with Additional String Methods
// Description:
// Write a function getCharacterFrequency() that takes a string as input, trims any leading/trailing spaces, converts it to lowercase, and returns an object that contains the frequency count of each character, excluding spaces.

// Requirements:
// Use .trim() to remove any extra spaces from the beginning and end of the string.
// Use .toLowerCase() to make all characters lowercase.
// Use .reduce() to accumulate the frequency of each character in the string, excluding spaces.
// Example:
// const str = " Hello World! ";
// const result = getCharacterFrequency(str);
// console.log(result);
// // { h: 1, e: 1, l: 3, o: 2, w: 1, r: 1, d: 1, '!': 1 }


function getCharacterFrequency(str) {
  return str
    .trim()               
    .toLowerCase()        
    .replace(/\s/g, '')   
    .split('')            
    .reduce((acc, char) => {
      acc[char] = (acc[char] || 0) + 1;  
      return acc;
    }, {});               
}

// Example usage:
const str = " Hello World! ";
const result = getCharacterFrequency(str);
console.log(result);
// { h: 1, e: 1, l: 3, o: 2, w: 1, r: 1, d: 1, '!': 1 }
